.agent_build_common_deb:
  artifacts: &id007
    expire_in: 2 weeks
    paths:
    - $OMNIBUS_PACKAGE_DIR
  script: &id008
  - echo "About to build for $RELEASE_VERSION"
  - rm -rf $OMNIBUS_PACKAGE_DIR/*
  - $S3_CP_CMD $S3_ARTIFACTS_URI/system-probe.${PACKAGE_ARCH} /tmp/system-probe
  - chmod 755 /tmp/system-probe
  - $S3_CP_CMD $S3_ARTIFACTS_URI/libbcc-${PACKAGE_ARCH}.tar.xz /tmp/libbcc.tar.xz
  - inv -e agent.omnibus-build --release-version "$RELEASE_VERSION" --major-version
    "$AGENT_MAJOR_VERSION" --python-runtimes "$PYTHON_RUNTIMES" --base-dir $OMNIBUS_BASE_DIR
    ${USE_S3_CACHING} --skip-deps --system-probe-bin=/tmp/system-probe --libbcc-tarball=/tmp/libbcc.tar.xz
  - $S3_CP_CMD $OMNIBUS_BASE_DIR/pkg/datadog-agent_*_${PACKAGE_ARCH}.deb $S3_ARTIFACTS_URI/$DESTINATION_DEB
  - $S3_CP_CMD $OMNIBUS_BASE_DIR/pkg/datadog-agent-dbg_*_${PACKAGE_ARCH}.deb $S3_ARTIFACTS_URI/$DESTINATION_DBG_DEB
  - mkdir -p $OMNIBUS_PACKAGE_DIR && cp $OMNIBUS_BASE_DIR/pkg/datadog-agent*_${PACKAGE_ARCH}.deb{,.metadata.json}
    $OMNIBUS_PACKAGE_DIR
.agent_build_common_rpm:
  artifacts: &id009
    expire_in: 2 weeks
    paths:
    - $OMNIBUS_PACKAGE_DIR
  script: &id010
  - echo "About to build for $RELEASE_VERSION"
  - rm -rf $OMNIBUS_PACKAGE_DIR/*
  - set +x
  - RPM_GPG_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.rpm_signing_private_key_e09422b3
    --with-decryption --query "Parameter.Value" --out text)
  - printf -- "$RPM_GPG_KEY" | gpg --import --batch
  - export RPM_SIGNING_PASSPHRASE=$(aws ssm get-parameter --region us-east-1 --name
    ci.datadog-agent.rpm_signing_key_passphrase_e09422b3 --with-decryption --query
    "Parameter.Value" --out text)
  - set -x
  - $S3_CP_CMD $S3_ARTIFACTS_URI/system-probe.${PACKAGE_ARCH} /tmp/system-probe
  - chmod 755 /tmp/system-probe
  - $S3_CP_CMD $S3_ARTIFACTS_URI/libbcc-${PACKAGE_ARCH}.tar.xz /tmp/libbcc.tar.xz
  - inv -e agent.omnibus-build --release-version "$RELEASE_VERSION" --major-version
    "$AGENT_MAJOR_VERSION" --python-runtimes "$PYTHON_RUNTIMES" --base-dir $OMNIBUS_BASE_DIR  ${USE_S3_CACHING}
    --skip-deps --system-probe-bin=/tmp/system-probe --libbcc-tarball=/tmp/libbcc.tar.xz
  - find $OMNIBUS_BASE_DIR/pkg -type f -name '*.rpm' ! -name '*dbg*.rpm' -print0 |
    xargs -0 -I '{}' rpm -i '{}'
  - find $OMNIBUS_BASE_DIR/pkg -type f -name '*dbg*.rpm' -print0 | xargs -0 -I '{}'
    rpm -i '{}'
  - mkdir -p $OMNIBUS_PACKAGE_DIR && cp $OMNIBUS_BASE_DIR/pkg/*.{rpm,metadata.json}
    $OMNIBUS_PACKAGE_DIR
.agent_build_common_suse_rpm:
  artifacts: &id011
    expire_in: 2 weeks
    paths:
    - $OMNIBUS_PACKAGE_DIR_SUSE
  script: &id012
  - echo "About to build for $RELEASE_VERSION"
  - rm -rf $OMNIBUS_PACKAGE_DIR_SUSE/*
  - set +x
  - RPM_GPG_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.rpm_signing_private_key_e09422b3
    --with-decryption --query "Parameter.Value" --out text)
  - printf -- "$RPM_GPG_KEY" | gpg --import --batch
  - export RPM_SIGNING_PASSPHRASE=$(aws ssm get-parameter --region us-east-1 --name
    ci.datadog-agent.rpm_signing_key_passphrase_e09422b3 --with-decryption --query
    "Parameter.Value" --out text)
  - set -x
  - $S3_CP_CMD $S3_ARTIFACTS_URI/system-probe.${PACKAGE_ARCH} /tmp/system-probe
  - chmod 755 /tmp/system-probe
  - $S3_CP_CMD $S3_ARTIFACTS_URI/libbcc-${PACKAGE_ARCH}.tar.xz /tmp/libbcc.tar.xz
  - inv -e agent.omnibus-build --release-version "$RELEASE_VERSION" --major-version
    "$AGENT_MAJOR_VERSION" --python-runtimes "$PYTHON_RUNTIMES" --base-dir $OMNIBUS_BASE_DIR_SUSE
    ${USE_S3_CACHING} --skip-deps --system-probe-bin=/tmp/system-probe --libbcc-tarball=/tmp/libbcc.tar.xz
  - find $OMNIBUS_BASE_DIR_SUSE/pkg -type f -name '*.rpm' ! -name '*dbg*.rpm' -print0
    | xargs -0 -I '{}' zypper in '{}'
  - find $OMNIBUS_BASE_DIR_SUSE/pkg -type f -name '*dbg*.rpm' -print0 | xargs -0 -I
    '{}' zypper in '{}'
  - mkdir -p $OMNIBUS_PACKAGE_DIR_SUSE && cp $OMNIBUS_BASE_DIR_SUSE/pkg/*.{rpm,metadata.json}
    $OMNIBUS_PACKAGE_DIR_SUSE
.build_libbcc_common:
  needs:
  - fail_on_non_triggered_tag
  script:
  - git clone -b "$BCC_VERSION" --depth=1 https://github.com/iovisor/bcc.git /tmp/bcc
  - mkdir /tmp/bcc/build
  - cd /tmp/bcc/build
  - cmake .. -DCMAKE_INSTALL_PREFIX=/opt/libbcc -DCMAKE_EXE_LINKER_FLAGS='-Wl,-rpath,/opt/datadog-agent/embedded/lib'
    -DCMAKE_SHARED_LINKER_FLAGS='-Wl,-rpath,/opt/datadog-agent/embedded/lib'
  - make -j 4
  - make install
  - cd /opt/libbcc
  - chmod go-rwx lib/libbcc*
  - rm share/bcc/introspection/bps
  - cp $(ldd lib/libbcc.so | awk '$1 ~ /^libtinfo/ {system("dirname " $3)}')/libtinfo*
    lib
  - tar cvaf /tmp/libbcc.tar.xz .
  - $S3_CP_CMD /tmp/libbcc.tar.xz $S3_ARTIFACTS_URI/libbcc-$ARCH.tar.xz
  stage: deps_build
.docker_build_job_definition_amd64:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker:v1907756-26d65dc-18.09.6
  tags:
  - runner:docker
  - size:large
  variables:
    ARCH: amd64
.docker_build_job_definition_arm64:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker:v1903032-53399bc-18.09.6-arm64
  tags:
  - runner:docker-arm
  - platform:arm64
  variables:
    ARCH: arm64
.docker_hub_variables:
  DELEGATION_KEY_SSM_KEY: docker_hub_signing_key
  DELEGATION_PASS_SSM_KEY: docker_hub_signing_pass
  DOCKER_REGISTRY_LOGIN_SSM_KEY: docker_hub_login
  DOCKER_REGISTRY_PWD_SSM_KEY: docker_hub_pwd
  DOCKER_REGISTRY_URL: docker.io
  SRC_AGENT: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/agent
  SRC_DCA: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/cluster-agent
  SRC_DSD: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/dogstatsd
.docker_tag_windows_job_definition:
  after_script:
  - cat ci-scripts/docker-publish.ps1
  - docker run --rm -w C:\mnt -e IS_AWS_CONTAINER=true -e SIGN_WINDOWS=true -v "$(Get-Location):C:\mnt"
    -v \\.\pipe\docker_engine:\\.\pipe\docker_engine 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/windows_${Env:VARIANT}_x64:${Env:DATADOG_AGENT_WINBUILDERS}
    powershell -C C:\mnt\ci-scripts\docker-publish.ps1
  before_script:
  - $SHORT_CI_COMMIT_SHA = ${CI_COMMIT_SHA}.Substring(0,7)
  - $SRC_TAG = "v${CI_PIPELINE_ID}-${SHORT_CI_COMMIT_SHA}"
  - mkdir ci-scripts
  - '@"

    Set-PSDebug -Trace 1

    `$ErrorActionPreference = "Stop"

    # ECR Login

    `$AWS_ECR_PASSWORD = aws ecr get-login-password --region us-east-1

    docker login --username AWS --password "`${AWS_ECR_PASSWORD}" 486234852809.dkr.ecr.us-east-1.amazonaws.com

    # DockerHub login

    `$DOCKER_REGISTRY_LOGIN = aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.${DOCKER_REGISTRY_LOGIN_SSM_KEY}
    --with-decryption --query "Parameter.Value" --out text

    `$DOCKER_REGISTRY_PWD = aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.${DOCKER_REGISTRY_PWD_SSM_KEY}
    --with-decryption --query "Parameter.Value" --out text

    docker login --username "`${DOCKER_REGISTRY_LOGIN}" --password "`${DOCKER_REGISTRY_PWD}"
    "${DOCKER_REGISTRY_URL}"

    # DockerHub image signing

    `$Env:DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE = aws ssm get-parameter --region
    us-east-1 --name ci.datadog-agent.${DELEGATION_PASS_SSM_KEY} --with-decryption
    --query "Parameter.Value" --out text

    `$Env:NOTARY_DELEGATION_PASSPHRASE = `$Env:DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE

    `$Env:NOTARY_AUTH = "`${DOCKER_REGISTRY_LOGIN}:`${DOCKER_REGISTRY_PWD}"

    `$bytes = [System.Text.Encoding]::Unicode.GetBytes(`$Env:NOTARY_AUTH)

    `$Env:NOTARY_AUTH = [Convert]::ToBase64String(`$bytes)

    aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.${DELEGATION_KEY_SSM_KEY}
    --with-decryption --query "Parameter.Value" --out text | Set-Content -Encoding
    ASCII docker.key

    docker trust key load `$PWD\docker.key

    Remove-Item `$PWD\docker.key

    "@ | out-file ci-scripts/docker-publish.ps1

    '
  stage: image_deploy
  variables:
    DELEGATION_KEY_SSM_KEY: docker_hub_signing_key
    DELEGATION_PASS_SSM_KEY: docker_hub_signing_pass
    DOCKER_REGISTRY_LOGIN_SSM_KEY: docker_hub_login
    DOCKER_REGISTRY_PWD_SSM_KEY: docker_hub_pwd
    DOCKER_REGISTRY_URL: docker.io
    SRC_AGENT: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/agent
    SRC_DCA: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/cluster-agent
    SRC_DSD: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/dogstatsd
.kitchen_agent_a6:
  artifacts: &id001
    expire_in: 2 weeks
    paths:
    - $CI_PROJECT_DIR/kitchen_logs
    when: always
  except: &id004
    variables:
    - $RELEASE_VERSION_6 == ""
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/dd-agent-testing:$DATADOG_AGENT_BUILDERS
  only: &id002
  - master
  - tags
  - triggers
  - web
  retry: 1
  stage: testkitchen_testing
  tags: &id003
  - runner:main
  - size:large
  variables:
    AGENT_MAJOR_VERSION: 6
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a6
.kitchen_agent_a7:
  artifacts: *id001
  except: &id005
    variables:
    - $RELEASE_VERSION_7 == ""
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/dd-agent-testing:$DATADOG_AGENT_BUILDERS
  only: *id002
  retry: 1
  stage: testkitchen_testing
  tags: *id003
  variables:
    AGENT_MAJOR_VERSION: 7
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a7
.kitchen_azure_location_central_us:
  variables:
    AZURE_LOCATION: Central US
.kitchen_azure_location_north_central_us:
  variables:
    AZURE_LOCATION: North Central US
.kitchen_azure_location_south_central_us:
  variables:
    AZURE_LOCATION: South Central US
.kitchen_azure_location_west_central_us:
  variables:
    AZURE_LOCATION: West Central US
.kitchen_cleanup_azure_common:
  allow_failure: true
  before_script: &id016
  - rsync -azr --delete ./ $SRC_PATH
  dependencies: &id017 []
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/dd-agent-testing:$DATADOG_AGENT_BUILDERS
  only: *id002
  script: &id018
  - cd $DD_AGENT_TESTING_DIR
  - bash -l tasks/clean.sh
  stage: testkitchen_cleanup
  tags: &id019
  - runner:main
  - size:large
  when: always
.kitchen_cleanup_s3_common:
  allow_failure: true
  except: *id004
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  only: *id002
  script: &id020
  - aws s3 rm s3://$DEB_TESTING_S3_BUCKET/dists/pipeline-$DD_PIPELINE_ID --recursive
  - aws s3 rm s3://$RPM_TESTING_S3_BUCKET/pipeline-$DD_PIPELINE_ID --recursive
  - aws s3 rm s3://$RPM_TESTING_S3_BUCKET/suse/pipeline-$DD_PIPELINE_ID --recursive
  - if [ $AGENT_MAJOR_VERSION == "7" ]; then export WINDOWS_TESTING_S3_BUCKET=$WINDOWS_TESTING_S3_BUCKET_A7;
    else export WINDOWS_TESTING_S3_BUCKET=$WINDOWS_TESTING_S3_BUCKET_A6; fi
  - aws s3 rm s3://$WIN_S3_BUCKET/$WINDOWS_TESTING_S3_BUCKET --recursive
  - cd $OMNIBUS_PACKAGE_DIR
  - for deb in $(ls *amd64.deb); do aws s3 rm s3://$DEB_TESTING_S3_BUCKET/pool/d/da/$deb
    --recursive; done
  stage: testkitchen_cleanup
  tags: &id021
  - runner:main
  - size:large
  when: always
.kitchen_datadog_agent_flavor:
  variables:
    AGENT_FLAVOR: datadog-agent
.kitchen_datadog_iot_agent_flavor:
  variables:
    AGENT_FLAVOR: datadog-iot-agent
.kitchen_os_centos:
  before_script:
  - rsync -azr --delete ./ $SRC_PATH
  - export TEST_PLATFORMS="centos-69,urn,OpenLogic:CentOS:6.9:6.9.20180530"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|centos-77,urn,OpenLogic:CentOS:7.7:7.7.201912090"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|rhel-81,urn,RedHat:RHEL:8.1:8.1.2020020415"
  - cd $DD_AGENT_TESTING_DIR
  - bash -l tasks/kitchen_setup.sh
.kitchen_os_debian:
  before_script:
  - rsync -azr --delete ./ $SRC_PATH
  - export TEST_PLATFORMS="debian-8,urn,credativ:Debian:8:8.20190313.0"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|debian-9,urn,credativ:Debian:9:9.20190515.0"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|debian-10,urn,Debian:debian-10:10:0.20190709.401"
  - cd $DD_AGENT_TESTING_DIR
  - bash -l tasks/kitchen_setup.sh
.kitchen_os_suse:
  before_script:
  - rsync -azr --delete ./ $SRC_PATH
  - export TEST_PLATFORMS="sles-12,urn,SUSE:SLES-BYOS:12-SP4:2019.11.13"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|sles-15,urn,SUSE:SLES-BYOS:15:2019.11.15"
  - cd $DD_AGENT_TESTING_DIR
  - bash -l tasks/kitchen_setup.sh
.kitchen_os_ubuntu:
  before_script:
  - rsync -azr --delete ./ $SRC_PATH
  - export TEST_PLATFORMS="ubuntu-14-04,urn,Canonical:UbuntuServer:14.04.5-LTS:14.04.201905140"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|ubuntu-16-04,urn,Canonical:UbuntuServer:16.04.0-LTS:16.04.201906170"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|ubuntu-18-04,urn,Canonical:UbuntuServer:18.04-LTS:18.04.201906040"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|ubuntu-20-04,urn,Canonical:0001-com-ubuntu-server-focal:20_04-lts:20.04.202004230"
  - cd $DD_AGENT_TESTING_DIR
  - bash -l tasks/kitchen_setup.sh
.kitchen_os_windows:
  before_script:
  - if [ $AGENT_MAJOR_VERSION == "7" ]; then export WINDOWS_TESTING_S3_BUCKET=$WINDOWS_TESTING_S3_BUCKET_A7;
    else export WINDOWS_TESTING_S3_BUCKET=$WINDOWS_TESTING_S3_BUCKET_A6; fi
  - rsync -azr --delete ./ $SRC_PATH
  - export TEST_PLATFORMS="win2008r2,id,/subscriptions/8c56d827-5f07-45ce-8f2b-6c5001db5c6f/resourceGroups/kitchen-test-images/providers/Microsoft.Compute/galleries/kitchenimages/images/Windows2008-R2-SP1/versions/1.0.0"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|win2012,urn,MicrosoftWindowsServer:WindowsServer:2012-Datacenter:3.127.20190410"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|win2012r2,urn,MicrosoftWindowsServer:WindowsServer:2012-R2-Datacenter:4.127.20190416"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|win2016,urn,MicrosoftWindowsServer:WindowsServer:2016-Datacenter-Server-Core:2016.127.20190603"
  - export TEST_PLATFORMS="$TEST_PLATFORMS|win2019,urn,MicrosoftWindowsServer:WindowsServer:2019-Datacenter-Core:2019.0.20190603"
  - cd $DD_AGENT_TESTING_DIR
  - bash -l tasks/kitchen_setup.sh
.kitchen_scenario_centos_a6:
  extends:
  - .kitchen_os_centos
  - .kitchen_agent_a6
  needs:
  - deploy_rpm_testing-a6
.kitchen_scenario_centos_a7:
  extends:
  - .kitchen_os_centos
  - .kitchen_agent_a7
  needs:
  - deploy_rpm_testing-a7
.kitchen_scenario_debian_a6:
  extends:
  - .kitchen_os_debian
  - .kitchen_agent_a6
  needs:
  - deploy_deb_testing-a6
.kitchen_scenario_debian_a7:
  extends:
  - .kitchen_os_debian
  - .kitchen_agent_a7
  needs:
  - deploy_deb_testing-a7
.kitchen_scenario_suse_a6:
  extends:
  - .kitchen_os_suse
  - .kitchen_agent_a6
  needs:
  - deploy_suse_rpm_testing-a6
.kitchen_scenario_suse_a7:
  extends:
  - .kitchen_os_suse
  - .kitchen_agent_a7
  needs:
  - deploy_suse_rpm_testing-a7
.kitchen_scenario_ubuntu_a6:
  extends:
  - .kitchen_os_ubuntu
  - .kitchen_agent_a6
  needs:
  - deploy_deb_testing-a6
.kitchen_scenario_ubuntu_a7:
  extends:
  - .kitchen_os_ubuntu
  - .kitchen_agent_a7
  needs:
  - deploy_deb_testing-a7
.kitchen_scenario_windows_a6:
  extends:
  - .kitchen_os_windows
  - .kitchen_agent_a6
  needs:
  - deploy_windows_testing-a6
.kitchen_scenario_windows_a7:
  extends:
  - .kitchen_os_windows
  - .kitchen_agent_a7
  needs:
  - deploy_windows_testing-a7
.kitchen_test_chef:
  script:
  - bash -l tasks/run-test-kitchen.sh chef-test $AGENT_MAJOR_VERSION
.kitchen_test_chef_agent:
  extends:
  - .kitchen_test_chef
  - .kitchen_datadog_agent_flavor
  - .kitchen_azure_location_north_central_us
.kitchen_test_install_script:
  script:
  - bash -l tasks/run-test-kitchen.sh install-script-test $AGENT_MAJOR_VERSION
.kitchen_test_install_script_agent:
  extends:
  - .kitchen_test_install_script
  - .kitchen_datadog_agent_flavor
  - .kitchen_azure_location_south_central_us
.kitchen_test_install_script_iot_agent:
  extends:
  - .kitchen_test_install_script
  - .kitchen_datadog_iot_agent_flavor
  - .kitchen_azure_location_west_central_us
.kitchen_test_step_by_step:
  script:
  - bash -l tasks/run-test-kitchen.sh step-by-step-test $AGENT_MAJOR_VERSION
.kitchen_test_step_by_step_agent:
  extends:
  - .kitchen_test_step_by_step
  - .kitchen_datadog_agent_flavor
  - .kitchen_azure_location_central_us
.kitchen_test_upgrade5:
  script:
  - bash -l tasks/run-test-kitchen.sh upgrade5-test $AGENT_MAJOR_VERSION
.kitchen_test_upgrade5_agent:
  extends:
  - .kitchen_test_upgrade5
  - .kitchen_datadog_agent_flavor
  - .kitchen_azure_location_central_us
.kitchen_test_upgrade6:
  script:
  - bash -l tasks/run-test-kitchen.sh upgrade6-test $AGENT_MAJOR_VERSION
.kitchen_test_upgrade6_agent:
  extends:
  - .kitchen_test_upgrade6
  - .kitchen_datadog_agent_flavor
  - .kitchen_azure_location_south_central_us
.kitchen_test_upgrade7:
  script:
  - bash -l tasks/run-test-kitchen.sh upgrade7-test $AGENT_MAJOR_VERSION
.kitchen_test_upgrade7_agent:
  extends:
  - .kitchen_test_upgrade7
  - .kitchen_datadog_agent_flavor
  - .kitchen_azure_location_north_central_us
.kitchen_test_windows_installer:
  before_script:
  - if [ $AGENT_MAJOR_VERSION == "7" ]; then export WINDOWS_TESTING_S3_BUCKET=$WINDOWS_TESTING_S3_BUCKET_A7;
    else export WINDOWS_TESTING_S3_BUCKET=$WINDOWS_TESTING_S3_BUCKET_A6; fi
  - rsync -azr --delete ./ $SRC_PATH
  - export TEST_PLATFORMS="win2012,urn,MicrosoftWindowsServer:WindowsServer:2012-Datacenter:3.127.20190410"
  - cd $DD_AGENT_TESTING_DIR
  - bash -l tasks/kitchen_setup.sh
  script:
  - bash -l tasks/run-test-kitchen.sh windows-install-test $AGENT_MAJOR_VERSION
.kitchen_test_windows_installer_agent:
  extends:
  - .kitchen_test_windows_installer
  - .kitchen_datadog_agent_flavor
  - .kitchen_azure_location_north_central_us
.quay_variables:
  DELEGATION_KEY_SSM_KEY: docker_hub_signing_key
  DELEGATION_PASS_SSM_KEY: docker_hub_signing_pass
  DOCKER_REGISTRY_LOGIN_SSM_KEY: quay_login
  DOCKER_REGISTRY_PWD_SSM_KEY: quay_pwd
  DOCKER_REGISTRY_URL: quay.io
  SRC_AGENT: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/agent
  SRC_DCA: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/cluster-agent
  SRC_DSD: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/dogstatsd
.run_old_tests_windows_base:
  needs:
  - fail_on_non_triggered_tag
  script:
  - docker run --rm -m 8192M -v "$(Get-Location):c:\mnt" -e IS_AWS_CONTAINER=true
    -e SIGN_WINDOWS=true -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e NEW_BUILDER="$NEW_BUILDER"
    486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/windows_1809_${ARCH}:${Env:DATADOG_AGENT_WINBUILDERS}
    c:\mnt\tasks\winbuildscripts\unittests.bat
  stage: source_test
  tags:
  - runner:windows-docker
  - windowsversion:1809
  variables:
    NEW_BUILDER: 'false'
.run_only_when_testkitchen_triggered:
  only: *id002
.run_only_when_triggered:
  only:
  - triggers
.run_only_when_triggered_on_nightly:
  only: &id013
    refs:
    - triggers
    variables:
    - $RELEASE_VERSION_6 == "nightly"
    - $RELEASE_VERSION_7 == "nightly-a7"
.run_only_when_triggered_on_tag_6:
  except:
    variables:
    - $RELEASE_VERSION_6 == "nightly"
    - $RELEASE_VERSION_6 == ""
  only:
    refs:
    - triggers
.run_only_when_triggered_on_tag_7:
  except:
    variables:
    - $RELEASE_VERSION_7 == "nightly-a7"
    - $RELEASE_VERSION_7 == ""
  only:
    refs:
    - triggers
.run_tests_preparation:
  before_script: &id014
  - source /root/.bashrc && conda activate $CONDA_ENV
  - pip install wheel
  - pip install -r requirements.txt
  - GO111MODULE=off go get gopkg.in/yaml.v2
  - GO111MODULE=off go get github.com/stretchr/testify
  - inv -e rtloader.make --install-prefix=$SRC_PATH/dev --python-runtimes "$PYTHON_RUNTIMES"
  - inv -e rtloader.install
  - inv -e rtloader.format --raise-if-changed
  - inv -e rtloader.test
  - inv -e deps --verbose --dep-vendor-only
  needs: &id015
  - fail_on_non_triggered_tag
.run_tests_windows_base:
  needs:
  - fail_on_non_triggered_tag
  script:
  - docker run --rm -m 8192M -v "$(Get-Location):c:\mnt" -e AWS_NETWORKING=true -e
    SIGN_WINDOWS=true -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e NEW_BUILDER="$NEW_BUILDER"
    486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}:$Env:DATADOG_AGENT_WINBUILDIMAGES
    c:\mnt\tasks\winbuildscripts\unittests.bat
  stage: source_test
  tags:
  - runner:windows-docker
  - windowsversion:1809
  variables:
    NEW_BUILDER: 'true'
.skip_when_triggered:
  except: &id006
    refs:
    - triggers
.skip_when_unwanted_on_6:
  except: *id004
.skip_when_unwanted_on_7:
  except: *id005
.system-probe_build_common:
  before_script:
  - mkdir -p $GOPATH/src/github.com/DataDog
  - '[[ "$ARCH" == arm64 ]] && cp -R $GOPATH/src/github.com/*/*/DataDog/datadog-agent
    $GOPATH/src/github.com/DataDog'
  - cd $SRC_PATH
  - inv -e deps --no-checks --verbose --dep-vendor-only
  - $S3_CP_CMD $S3_ARTIFACTS_URI/libbcc-$ARCH.tar.xz /tmp/libbcc.tar.xz
  - mkdir -p /opt/datadog-agent/embedded
  - tar -xvf /tmp/libbcc.tar.xz -C /opt/datadog-agent/embedded
  script:
  - CGO_CFLAGS='-I/opt/datadog-agent/embedded/include' CGO_LDFLAGS='-Wl,-rpath,/opt/datadog-agent/embedded/lib
    -L/opt/datadog-agent/embedded/lib' inv -e system-probe.build --go-version=$SYSTEM_PROBE_GO_VERSION
  - CGO_CFLAGS='-I/opt/datadog-agent/embedded/include' CGO_LDFLAGS='-Wl,-rpath,/opt/datadog-agent/embedded/lib
    -L/opt/datadog-agent/embedded/lib' inv -e system-probe.test --only-check-bpf-bytes
  - $S3_CP_CMD $SRC_PATH/$SYSTEM_PROBE_BINARIES_DIR/system-probe $S3_ARTIFACTS_URI/system-probe.$ARCH
.windows_main_agent_base:
  extends: .windows_msi_base
  variables:
    OMNIBUS_TARGET: main
.windows_msi_base:
  artifacts:
    expire_in: 2 weeks
    paths:
    - .omnibus/pkg
  needs:
  - run_go_tidy_check
  script:
  - if (Test-Path .omnibus) { remove-item -recurse -force .omnibus }
  - if (Test-Path build-out) { remove-item -recurse -force build-out }
  - mkdir .omnibus\pkg
  - docker run --rm -m 4096M -v "$(Get-Location):c:\mnt" -e CI_JOB_ID=${CI_JOB_ID}
    -e OMNIBUS_TARGET=${OMNIBUS_TARGET} -e WINDOWS_BUILDER=true -e RELEASE_VERSION="$RELEASE_VERSION"
    -e MAJOR_VERSION="$AGENT_MAJOR_VERSION" -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e AWS_NETWORKING=true
    -e SIGN_WINDOWS=true -e TARGET_ARCH="$ARCH" -e NEW_BUILDER=true 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}:${Env:DATADOG_AGENT_WINBUILDIMAGES}
    c:\mnt\tasks\winbuildscripts\buildwin.bat
  - copy build-out\${CI_JOB_ID}\*.msi .omnibus\pkg
  - if (Test-Path build-out\${CI_JOB_ID}\*.zip) { copy build-out\${CI_JOB_ID}\*.zip
    .omnibus\pkg }
  - remove-item -recurse -force build-out\${CI_JOB_ID}
  - get-childitem build-out
  - get-childitem .omnibus\pkg
  stage: package_build
  tags:
  - runner:windows-docker
  - windowsversion:1809
.windows_old_main_agent_base:
  extends: .windows_old_msi_base
  variables:
    OMNIBUS_TARGET: main
.windows_old_msi_base:
  allow_failure: true
  artifacts:
    expire_in: 2 weeks
    paths:
    - .omnibus/pkg
  except: *id006
  needs:
  - run_go_tidy_check
  script:
  - if (Test-Path .omnibus) { remove-item -recurse -force .omnibus }
  - if (Test-Path build-out) { remove-item -recurse -force build-out }
  - mkdir .omnibus\pkg
  - docker run --rm -m 4096M -v "$(Get-Location):c:\mnt" -e CI_JOB_ID=${CI_JOB_ID}
    -e OMNIBUS_TARGET=${OMNIBUS_TARGET} -e WINDOWS_BUILDER=true -e RELEASE_VERSION="$RELEASE_VERSION"
    -e MAJOR_VERSION="$AGENT_MAJOR_VERSION" -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e IS_AWS_CONTAINER=true
    -e SIGN_WINDOWS=true -e TARGET_ARCH="$ARCH" -e NEW_BUILDER=false 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/windows_1809_${ARCH}:${Env:DATADOG_AGENT_WINBUILDERS}
    c:\mnt\tasks\winbuildscripts\oldbuildwin.bat
  - copy build-out\${CI_JOB_ID}\*.msi .omnibus\pkg
  - if (Test-Path build-out\${CI_JOB_ID}\*.zip) { copy build-out\${CI_JOB_ID}\*.zip
    .omnibus\pkg }
  - remove-item -recurse -force build-out\${CI_JOB_ID}
  - get-childitem build-out
  - get-childitem .omnibus\pkg
  stage: package_build
  tags:
  - runner:windows-docker
  - windowsversion:1809
agent_deb-x64-a6:
  artifacts: *id007
  before_script:
  - source /root/.bashrc && conda activate $CONDA_ENV
  - inv -e deps --no-checks --verbose --dep-vendor-only
  - export RELEASE_VERSION=$RELEASE_VERSION_6
  except: *id004
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - run_tests_deb-x64-py2
  - run_tests_deb-x64-py3
  - build_system-probe-x64
  script: *id008
  stage: package_build
  tags:
  - runner:main
  - size:2xlarge
  variables:
    AGENT_MAJOR_VERSION: 6
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: /credentials
    CONDA_ENV: ddpy3
    DESTINATION_DBG_DEB: datadog-agent-dbg_6_amd64.deb
    DESTINATION_DEB: datadog-agent_6_amd64.deb
    PACKAGE_ARCH: amd64
    PYTHON_RUNTIMES: 2,3
agent_deb-x64-a7:
  artifacts: *id007
  before_script:
  - source /root/.bashrc && conda activate $CONDA_ENV
  - inv -e deps --no-checks --verbose --dep-vendor-only
  - export RELEASE_VERSION=$RELEASE_VERSION_7
  except: *id005
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - run_tests_deb-x64-py3
  - build_system-probe-x64
  script: *id008
  stage: package_build
  tags:
  - runner:main
  - size:2xlarge
  variables:
    AGENT_MAJOR_VERSION: 7
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: /credentials
    CONDA_ENV: ddpy3
    DESTINATION_DBG_DEB: datadog-agent-dbg_7_amd64.deb
    DESTINATION_DEB: datadog-agent_7_amd64.deb
    PACKAGE_ARCH: amd64
    PYTHON_RUNTIMES: '3'
agent_rpm-x64-a6:
  artifacts: *id009
  before_script:
  - source /root/.bashrc && conda activate $CONDA_ENV
  - inv -e deps --no-checks --verbose --dep-vendor-only
  - export RELEASE_VERSION=$RELEASE_VERSION_6
  except: *id004
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_x64:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - run_tests_rpm-x64-py2
  - run_tests_rpm-x64-py3
  - build_system-probe-x64
  script: *id010
  stage: package_build
  tags:
  - runner:main
  - size:2xlarge
  variables:
    AGENT_MAJOR_VERSION: 6
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: /credentials
    CONDA_ENV: ddpy3
    PACKAGE_ARCH: amd64
    PYTHON_RUNTIMES: 2,3
agent_rpm-x64-a7:
  artifacts: *id009
  before_script:
  - source /root/.bashrc && conda activate $CONDA_ENV
  - inv -e deps --no-checks --verbose --dep-vendor-only
  - export RELEASE_VERSION=$RELEASE_VERSION_7
  except: *id005
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_x64:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - run_tests_rpm-x64-py3
  - build_system-probe-x64
  script: *id010
  stage: package_build
  tags:
  - runner:main
  - size:2xlarge
  variables:
    AGENT_MAJOR_VERSION: 7
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: /credentials
    CONDA_ENV: ddpy3
    PACKAGE_ARCH: amd64
    PYTHON_RUNTIMES: '3'
agent_suse-x64-a6:
  artifacts: *id011
  before_script:
  - export RELEASE_VERSION=$RELEASE_VERSION_6
  - inv -e deps --no-checks --verbose --dep-vendor-only
  except: *id004
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/suse_x64:$DATADOG_AGENT_BUILDERS
  needs:
  - run_tests_rpm-x64-py2
  - run_tests_rpm-x64-py3
  - build_system-probe-x64
  script: *id012
  stage: package_build
  tags:
  - runner:main
  - size:2xlarge
  variables:
    AGENT_MAJOR_VERSION: 6
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: /credentials
    PACKAGE_ARCH: amd64
    PYTHON_RUNTIMES: 2,3
agent_suse-x64-a7:
  artifacts: *id011
  before_script:
  - export RELEASE_VERSION=$RELEASE_VERSION_7
  - inv -e deps --no-checks --verbose --dep-vendor-only
  except: *id005
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/suse_x64:$DATADOG_AGENT_BUILDERS
  needs:
  - run_tests_rpm-x64-py3
  - build_system-probe-x64
  script: *id012
  stage: package_build
  tags:
  - runner:main
  - size:2xlarge
  variables:
    AGENT_MAJOR_VERSION: 7
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: /credentials
    PACKAGE_ARCH: amd64
    PYTHON_RUNTIMES: '3'
build_iot_agent-deb_x64:
  before_script:
  - source /root/.bashrc && conda activate ddpy3
  - inv -e deps --verbose --dep-vendor-only --no-checks
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - run_tests_deb-x64-py3
  script:
  - inv -e agent.build --iot --major-version 7
  - $S3_CP_CMD $SRC_PATH/$AGENT_BINARIES_DIR/agent $S3_ARTIFACTS_URI/iot/agent
  stage: binary_build
  tags:
  - runner:main
  - size:large
build_libbcc_arm64:
  extends: .build_libbcc_common
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_arm64:$DATADOG_AGENT_ARMBUILDIMAGES
  tags:
  - runner:docker-arm
  - platform:arm64
  variables:
    ARCH: arm64
build_libbcc_x64:
  extends: .build_libbcc_common
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_x64:$DATADOG_AGENT_BUILDIMAGES
  tags:
  - runner:main
  - size:large
  variables:
    ARCH: amd64
build_system-probe-x64:
  extends: .system-probe_build_common
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_x64:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  needs:
  - build_libbcc_x64
  - run_tests_deb-x64-py3
  stage: binary_build
  tags:
  - runner:main
  - size:large
  variables:
    ARCH: amd64
default:
  retry:
    max: 2
    when:
    - runner_system_failure
    - stuck_or_timeout_failure
    - unknown_failure
    - api_failure
deploy_deb_testing-a6:
  before_script:
  - ls $OMNIBUS_PACKAGE_DIR
  except: *id004
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  needs:
  - agent_deb-x64-a6
  only: *id002
  script:
  - source /usr/local/rvm/scripts/rvm
  - rvm use 2.4
  - set +x
  - APT_SIGNING_KEY_ID=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_key_id
    --with-decryption --query "Parameter.Value" --out text)
  - APT_SIGNING_PRIVATE_KEY_PART1=$(aws ssm get-parameter --region us-east-1 --name
    ci.datadog-agent.apt_signing_private_key_part1 --with-decryption --query "Parameter.Value"
    --out text)
  - APT_SIGNING_PRIVATE_KEY_PART2=$(aws ssm get-parameter --region us-east-1 --name
    ci.datadog-agent.apt_signing_private_key_part2 --with-decryption --query "Parameter.Value"
    --out text)
  - APT_SIGNING_KEY_PASSPHRASE=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_key_passphrase
    --with-decryption --query "Parameter.Value" --out text)
  - echo "$APT_SIGNING_KEY_ID"
  - printf -- "$APT_SIGNING_PRIVATE_KEY_PART1\n$APT_SIGNING_PRIVATE_KEY_PART2\n" |
    gpg --import --batch
  - echo "$APT_SIGNING_KEY_PASSPHRASE" | deb-s3 upload -c "pipeline-$DD_PIPELINE_ID"
    -m 6 -b $DEB_TESTING_S3_BUCKET -a amd64 --sign=$APT_SIGNING_KEY_ID --gpg_options="--passphrase-fd
    0 --pinentry-mode loopback --batch --digest-algo SHA512" --preserve_versions --visibility
    public $OMNIBUS_PACKAGE_DIR/datadog-*_6*amd64.deb
  - echo "$APT_SIGNING_KEY_PASSPHRASE" | deb-s3 upload -c "pipeline-$DD_PIPELINE_ID"
    -m 6 -b $DEB_TESTING_S3_BUCKET -a x86_64 --sign=$APT_SIGNING_KEY_ID --gpg_options="--passphrase-fd
    0 --pinentry-mode loopback --batch --digest-algo SHA512" --preserve_versions --visibility
    public $OMNIBUS_PACKAGE_DIR/datadog-*_6*amd64.deb
  stage: testkitchen_deploy
  tags:
  - runner:main
  - size:large
  variables:
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a6
deploy_deb_testing-a7:
  before_script:
  - ls $OMNIBUS_PACKAGE_DIR
  except: *id005
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  needs:
  - agent_deb-x64-a7
  - iot_agent_deb-x64
  only: *id002
  script:
  - source /usr/local/rvm/scripts/rvm
  - rvm use 2.4
  - set +x
  - APT_SIGNING_KEY_ID=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_key_id
    --with-decryption --query "Parameter.Value" --out text)
  - APT_SIGNING_PRIVATE_KEY_PART1=$(aws ssm get-parameter --region us-east-1 --name
    ci.datadog-agent.apt_signing_private_key_part1 --with-decryption --query "Parameter.Value"
    --out text)
  - APT_SIGNING_PRIVATE_KEY_PART2=$(aws ssm get-parameter --region us-east-1 --name
    ci.datadog-agent.apt_signing_private_key_part2 --with-decryption --query "Parameter.Value"
    --out text)
  - APT_SIGNING_KEY_PASSPHRASE=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_key_passphrase
    --with-decryption --query "Parameter.Value" --out text)
  - echo "$APT_SIGNING_KEY_ID"
  - printf -- "$APT_SIGNING_PRIVATE_KEY_PART1\n$APT_SIGNING_PRIVATE_KEY_PART2\n" |
    gpg --import --batch
  - echo "$APT_SIGNING_KEY_PASSPHRASE" | deb-s3 upload -c "pipeline-$DD_PIPELINE_ID"
    -m 7 -b $DEB_TESTING_S3_BUCKET -a amd64 --sign=$APT_SIGNING_KEY_ID --gpg_options="--passphrase-fd
    0 --pinentry-mode loopback --batch --digest-algo SHA512" --preserve_versions --visibility
    public $OMNIBUS_PACKAGE_DIR/datadog-*_7*amd64.deb
  - echo "$APT_SIGNING_KEY_PASSPHRASE" | deb-s3 upload -c "pipeline-$DD_PIPELINE_ID"
    -m 7 -b $DEB_TESTING_S3_BUCKET -a x86_64 --sign=$APT_SIGNING_KEY_ID --gpg_options="--passphrase-fd
    0 --pinentry-mode loopback --batch --digest-algo SHA512" --preserve_versions --visibility
    public $OMNIBUS_PACKAGE_DIR/datadog-*_7*amd64.deb
  stage: testkitchen_deploy
  tags:
  - runner:main
  - size:large
  variables:
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a7
deploy_rpm_testing-a6:
  before_script:
  - ls $OMNIBUS_PACKAGE_DIR
  except: *id004
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  needs:
  - agent_rpm-x64-a6
  only: *id002
  script:
  - source /usr/local/rvm/scripts/rvm
  - rvm use 2.4
  - rpm-s3 --verbose --visibility public-read -c "https://s3.amazonaws.com" -b $RPM_TESTING_S3_BUCKET
    -p "pipeline-$DD_PIPELINE_ID/6/x86_64/" $OMNIBUS_PACKAGE_DIR/datadog-*-6.*x86_64.rpm
  stage: testkitchen_deploy
  tags:
  - runner:main
  - size:large
  variables:
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a6
deploy_rpm_testing-a7:
  before_script:
  - ls $OMNIBUS_PACKAGE_DIR
  except: *id005
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  needs:
  - agent_rpm-x64-a7
  - iot_agent_rpm-x64
  only: *id002
  script:
  - source /usr/local/rvm/scripts/rvm
  - rvm use 2.4
  - rpm-s3 --verbose --visibility public-read -c "https://s3.amazonaws.com" -b $RPM_TESTING_S3_BUCKET
    -p "pipeline-$DD_PIPELINE_ID/7/x86_64/" $OMNIBUS_PACKAGE_DIR/datadog-*-7.*x86_64.rpm
  stage: testkitchen_deploy
  tags:
  - runner:main
  - size:large
  variables:
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a7
deploy_suse_rpm_testing-a6:
  before_script:
  - ls $OMNIBUS_PACKAGE_DIR_SUSE
  except: *id004
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  needs:
  - agent_suse-x64-a6
  only: *id002
  script:
  - source /usr/local/rvm/scripts/rvm
  - rvm use 2.4
  - rpm-s3 --verbose --visibility public-read -c "https://s3.amazonaws.com" -b $RPM_TESTING_S3_BUCKET
    -p "suse/pipeline-$DD_PIPELINE_ID/6/x86_64/" $OMNIBUS_PACKAGE_DIR_SUSE/datadog-*-6.*x86_64.rpm
  stage: testkitchen_deploy
  tags:
  - runner:main
  - size:large
  variables:
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a6
deploy_suse_rpm_testing-a7:
  before_script:
  - ls $OMNIBUS_PACKAGE_DIR_SUSE
  except: *id005
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  needs:
  - agent_suse-x64-a7
  - iot_agent_suse-x64
  only: *id002
  script:
  - source /usr/local/rvm/scripts/rvm
  - rvm use 2.4
  - rpm-s3 --verbose --visibility public-read -c "https://s3.amazonaws.com" -b $RPM_TESTING_S3_BUCKET
    -p "suse/pipeline-$DD_PIPELINE_ID/7/x86_64/" $OMNIBUS_PACKAGE_DIR_SUSE/datadog-*-7.*x86_64.rpm
  stage: testkitchen_deploy
  tags:
  - runner:main
  - size:large
  variables:
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a7
deploy_windows_testing-a6:
  before_script:
  - ls $OMNIBUS_PACKAGE_DIR
  except: *id004
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  needs:
  - windows_msi_x64-a6
  only: *id002
  script:
  - $S3_CP_CMD --recursive --exclude "*" --include "datadog-agent-6.*.msi" $OMNIBUS_PACKAGE_DIR
    s3://$WIN_S3_BUCKET/$WINDOWS_TESTING_S3_BUCKET_A6 --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
    full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732
  stage: testkitchen_deploy
  tags:
  - runner:main
  - size:large
deploy_windows_testing-a7:
  before_script:
  - ls $OMNIBUS_PACKAGE_DIR
  except: *id005
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  needs:
  - windows_msi_x64-a7
  only: *id002
  script:
  - $S3_CP_CMD --recursive --exclude "*" --include "datadog-agent-7.*.msi" $OMNIBUS_PACKAGE_DIR
    s3://$WIN_S3_BUCKET/$WINDOWS_TESTING_S3_BUCKET_A7 --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
    full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732
  stage: testkitchen_deploy
  tags:
  - runner:main
  - size:large
dev_branch_docker_hub-a7-windows:
  except: *id005
  extends: .docker_tag_windows_job_definition
  needs:
  - docker_build_agent7_windows1809
  - docker_build_agent7_windows1809_jmx
  - docker_build_agent7_windows1909
  - docker_build_agent7_windows1909_jmx
  script:
  - '@"

    # On newer Kernel we can pull/push older images even though these images won''t
    run

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-win1809-amd64 datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3-win1809

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-jmx-win1809-amd64
    datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3-jmx-win1809

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-win1909-amd64 datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3-win1909

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-jmx-win1909-amd64
    datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3-jmx-win1909


    inv -e docker.publish-manifest --signed-push --name datadog/agent-dev --tag ${CI_COMMIT_REF_SLUG}-py3-win
    --image datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3-win1809,windows/amd64 --image
    datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3-win1909,windows/amd64

    inv -e docker.publish-manifest --signed-push --name datadog/agent-dev --tag ${CI_COMMIT_REF_SLUG}-py3-jmx-win
    --image datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3-jmx-win1809,windows/amd64
    --image datadog/agent-dev:${CI_COMMIT_REF_SLUG}-py3-jmx-win1909,windows/amd64

    "@ | Add-Content ci-scripts/docker-publish.ps1

    '
  tags:
  - runner:windows-docker
  - windowsversion:1909
  variables:
    VARIANT: 1909
  when: manual
dev_master_docker_hub-a7-windows:
  except: *id005
  extends: .docker_tag_windows_job_definition
  needs:
  - docker_build_agent7_windows1809
  - docker_build_agent7_windows1809_jmx
  - docker_build_agent7_windows1909
  - docker_build_agent7_windows1909_jmx
  only:
  - master
  script:
  - '@"

    # On newer Kernel we can pull/push older images even though these images won''t
    run

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-win1809-amd64 datadog/agent-dev:master-py3-win1809

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-jmx-win1809-amd64
    datadog/agent-dev:master-py3-jmx-win1809

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-win1909-amd64 datadog/agent-dev:master-py3-win1909

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-jmx-win1909-amd64
    datadog/agent-dev:master-py3-jmx-win1909


    inv -e docker.publish-manifest --signed-push --name datadog/agent-dev --tag datadog/agent-dev:master-py3-win
    --image datadog/agent-dev:master-py3-win1809,windows/amd64 --image datadog/agent-dev:master-py3-win1909,windows/amd64

    inv -e docker.publish-manifest --signed-push --name datadog/agent-dev --tag datadog/agent-dev:master-py3-jmx-win
    --image datadog/agent-dev:master-py3-jmx-win1809,windows/amd64 --image datadog/agent-dev:master-py3-jmx-win1909,windows/amd64

    "@ | Add-Content ci-scripts/docker-publish.ps1

    '
  - cat ci-scripts/docker-publish.ps1
  tags:
  - runner:windows-docker
  - windowsversion:1909
  variables:
    VARIANT: 1909
dev_nightly_docker_hub-a7-windows:
  except: *id005
  extends: .docker_tag_windows_job_definition
  needs:
  - docker_build_agent7_windows1809
  - docker_build_agent7_windows1809_jmx
  - docker_build_agent7_windows1909
  - docker_build_agent7_windows1909_jmx
  only: *id013
  script:
  - '@"

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-win1809-amd64 datadog/agent-dev:nightly-${CI_COMMIT_SHORT_SHA}-py3-win1809

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-jmx-win1809-amd64
    datadog/agent-dev:nightly-${CI_COMMIT_SHORT_SHA}-py3-jmx-win1809

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-win1909-amd64 datadog/agent-dev:nightly-${CI_COMMIT_SHORT_SHA}-py3-win1909

    inv -e docker.publish --signed-push ${SRC_AGENT}:${SRC_TAG}-7-jmx-win1909-amd64
    datadog/agent-dev:nightly-${CI_COMMIT_SHORT_SHA}-py3-jmx-win1909

    "@ | Add-Content ci-scripts/docker-publish.ps1

    '
  tags:
  - runner:windows-docker
  - windowsversion:1909
  variables:
    VARIANT: 1909
docker_build_agent7_windows1809:
  after_script:
  - docker image prune -f
  - docker builder prune -a -f
  before_script:
  - '# noop'
  except: *id005
  needs:
  - windows_msi_x64-a7
  script:
  - $ErrorActionPreference = "Stop"
  - $SHORT_CI_COMMIT_SHA = ${CI_COMMIT_SHA}.Substring(0,7)
  - $TARGET_TAG = "${IMAGE}:v${CI_PIPELINE_ID}-${SHORT_CI_COMMIT_SHA}${TAG_SUFFIX}-win1809-amd64"
  - cp ${OMNIBUS_PACKAGE_DIR}/datadog-agent-7*-x86_64.zip ${BUILD_CONTEXT}/datadog-agent-7-latest.amd64.zip
  - powershell -Command "docker build ${BUILD_ARG} --pull --file ${BUILD_CONTEXT}/windows/amd64/Dockerfile
    --tag ${TARGET_TAG} ${BUILD_CONTEXT}"
  - docker push ${TARGET_TAG}
  - docker rmi ${TARGET_TAG}
  stage: image_build
  tags:
  - runner:windows-docker
  - windowsversion:1809
  variables:
    BUILD_ARG: --build-arg BASE_IMAGE=mcr.microsoft.com/powershell:windowsservercore-1809
      --build-arg WITH_JMX=false
    BUILD_CONTEXT: Dockerfiles/agent
    IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/agent
    TAG_SUFFIX: -7
docker_build_agent7_windows1809_jmx:
  after_script:
  - docker image prune -f
  - docker builder prune -a -f
  before_script:
  - '# noop'
  except: *id005
  needs:
  - windows_msi_x64-a7
  script:
  - $ErrorActionPreference = "Stop"
  - $SHORT_CI_COMMIT_SHA = ${CI_COMMIT_SHA}.Substring(0,7)
  - $TARGET_TAG = "${IMAGE}:v${CI_PIPELINE_ID}-${SHORT_CI_COMMIT_SHA}${TAG_SUFFIX}-win1809-amd64"
  - cp ${OMNIBUS_PACKAGE_DIR}/datadog-agent-7*-x86_64.zip ${BUILD_CONTEXT}/datadog-agent-7-latest.amd64.zip
  - powershell -Command "docker build ${BUILD_ARG} --pull --file ${BUILD_CONTEXT}/windows/amd64/Dockerfile
    --tag ${TARGET_TAG} ${BUILD_CONTEXT}"
  - docker push ${TARGET_TAG}
  - docker rmi ${TARGET_TAG}
  stage: image_build
  tags:
  - runner:windows-docker
  - windowsversion:1809
  variables:
    BUILD_ARG: --build-arg BASE_IMAGE=mcr.microsoft.com/powershell:windowsservercore-1809
      --build-arg WITH_JMX=true
    BUILD_CONTEXT: Dockerfiles/agent
    IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/agent
    TAG_SUFFIX: -7-jmx
docker_build_agent7_windows1909:
  after_script:
  - docker image prune -f
  - docker builder prune -a -f
  before_script:
  - '# noop'
  except: *id005
  needs:
  - windows_msi_x64-a7
  script:
  - $ErrorActionPreference = "Stop"
  - $SHORT_CI_COMMIT_SHA = ${CI_COMMIT_SHA}.Substring(0,7)
  - $TARGET_TAG = "${IMAGE}:v${CI_PIPELINE_ID}-${SHORT_CI_COMMIT_SHA}${TAG_SUFFIX}-win1909-amd64"
  - cp ${OMNIBUS_PACKAGE_DIR}/datadog-agent-7*-x86_64.zip ${BUILD_CONTEXT}/datadog-agent-7-latest.amd64.zip
  - powershell -Command "docker build ${BUILD_ARG} --pull --file ${BUILD_CONTEXT}/windows/amd64/Dockerfile
    --tag ${TARGET_TAG} ${BUILD_CONTEXT}"
  - docker push ${TARGET_TAG}
  - docker rmi ${TARGET_TAG}
  stage: image_build
  tags:
  - runner:windows-docker
  - windowsversion:1909
  variables:
    BUILD_ARG: --build-arg BASE_IMAGE=mcr.microsoft.com/powershell:windowsservercore-1909
      --build-arg WITH_JMX=false
    BUILD_CONTEXT: Dockerfiles/agent
    IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/agent
    TAG_SUFFIX: -7
docker_build_agent7_windows1909_jmx:
  after_script:
  - docker image prune -f
  - docker builder prune -a -f
  before_script:
  - '# noop'
  except: *id005
  needs:
  - windows_msi_x64-a7
  script:
  - $ErrorActionPreference = "Stop"
  - $SHORT_CI_COMMIT_SHA = ${CI_COMMIT_SHA}.Substring(0,7)
  - $TARGET_TAG = "${IMAGE}:v${CI_PIPELINE_ID}-${SHORT_CI_COMMIT_SHA}${TAG_SUFFIX}-win1909-amd64"
  - cp ${OMNIBUS_PACKAGE_DIR}/datadog-agent-7*-x86_64.zip ${BUILD_CONTEXT}/datadog-agent-7-latest.amd64.zip
  - powershell -Command "docker build ${BUILD_ARG} --pull --file ${BUILD_CONTEXT}/windows/amd64/Dockerfile
    --tag ${TARGET_TAG} ${BUILD_CONTEXT}"
  - docker push ${TARGET_TAG}
  - docker rmi ${TARGET_TAG}
  stage: image_build
  tags:
  - runner:windows-docker
  - windowsversion:1909
  variables:
    BUILD_ARG: --build-arg BASE_IMAGE=mcr.microsoft.com/powershell:windowsservercore-1909
      --build-arg WITH_JMX=true
    BUILD_CONTEXT: Dockerfiles/agent
    IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent/agent
    TAG_SUFFIX: -7-jmx
fail_on_non_triggered_tag:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  script:
  - echo CI_PIPELINE_SOURCE=$CI_PIPELINE_SOURCE CI_COMMIT_TAG=$CI_COMMIT_TAG
  - '[[ $CI_COMMIT_TAG == dca-* || $CI_COMMIT_TAG == "" || $CI_PIPELINE_SOURCE !=
    "push" ]]'
  stage: fail_on_tag
  tags:
  - runner:main
  - size:2xlarge
include: https://gitlab-templates.ddbuild.io/slack-notifier/v1/template.yml
iot_agent_deb-x64:
  artifacts:
    expire_in: 2 weeks
    paths:
    - $OMNIBUS_PACKAGE_DIR
  before_script:
  - source /root/.bashrc && conda activate ddpy3
  - inv -e deps --verbose --dep-vendor-only --no-checks
  except: *id005
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - build_iot_agent-deb_x64
  script:
  - rm -rf $OMNIBUS_PACKAGE_DIR/*
  - inv -e agent.omnibus-build --iot --log-level debug --release-version "$RELEASE_VERSION_7"
    --major-version 7 --base-dir $OMNIBUS_BASE_DIR --skip-deps
  - find $OMNIBUS_BASE_DIR/pkg -name "datadog-iot-agent*_amd64.deb" -exec dpkg -c
    {} \;
  - $S3_CP_CMD $OMNIBUS_BASE_DIR/pkg/datadog-iot-agent*_amd64.deb $S3_ARTIFACTS_URI/datadog-iot-agent_amd64.deb
  - mkdir -p $OMNIBUS_PACKAGE_DIR && cp $OMNIBUS_BASE_DIR/pkg/datadog-iot-agent*_amd64.deb{,.metadata.json}
    $OMNIBUS_PACKAGE_DIR
  stage: package_build
  tags:
  - runner:main
  - size:2xlarge
  variables:
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: /credentials
    PACKAGE_ARCH: amd64
iot_agent_rpm-x64:
  artifacts:
    expire_in: 2 weeks
    paths:
    - $OMNIBUS_PACKAGE_DIR
  before_script:
  - source /root/.bashrc && conda activate ddpy3
  - inv -e deps --verbose --dep-vendor-only --no-checks
  except: *id005
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_x64:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - build_iot_agent-deb_x64
  script:
  - rm -rf $OMNIBUS_PACKAGE_DIR/*
  - set +x
  - RPM_GPG_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.rpm_signing_private_key_e09422b3
    --with-decryption --query "Parameter.Value" --out text)
  - printf -- "$RPM_GPG_KEY" | gpg --import --batch
  - export RPM_SIGNING_PASSPHRASE=$(aws ssm get-parameter --region us-east-1 --name
    ci.datadog-agent.rpm_signing_key_passphrase_e09422b3 --with-decryption --query
    "Parameter.Value" --out text)
  - set -x
  - inv -e agent.omnibus-build --iot --log-level debug --release-version "$RELEASE_VERSION_7"
    --major-version 7 --base-dir $OMNIBUS_BASE_DIR --skip-deps
  - mkdir -p $OMNIBUS_PACKAGE_DIR && cp $OMNIBUS_BASE_DIR/pkg/*.{rpm,metadata.json}
    $OMNIBUS_PACKAGE_DIR
  stage: package_build
  tags:
  - runner:main
  - size:2xlarge
  variables:
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: /credentials
iot_agent_suse-x64:
  artifacts:
    expire_in: 2 weeks
    paths:
    - $OMNIBUS_PACKAGE_DIR_SUSE
  before_script:
  - source /root/.bashrc && conda activate ddpy3
  - inv -e deps --verbose --dep-vendor-only --no-checks
  except: *id005
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/suse_x64:$DATADOG_AGENT_BUILDERS
  needs:
  - build_iot_agent-deb_x64
  script:
  - rm -rf $OMNIBUS_PACKAGE_DIR_SUSE/*
  - set +x
  - RPM_GPG_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.rpm_signing_private_key_e09422b3
    --with-decryption --query "Parameter.Value" --out text)
  - printf -- "$RPM_GPG_KEY" | gpg --import --batch
  - export RPM_SIGNING_PASSPHRASE=$(aws ssm get-parameter --region us-east-1 --name
    ci.datadog-agent.rpm_signing_key_passphrase_e09422b3 --with-decryption --query
    "Parameter.Value" --out text)
  - set -x
  - inv -e agent.omnibus-build --iot --log-level debug --release-version "$RELEASE_VERSION_7"
    --major-version 7 --base-dir $OMNIBUS_BASE_DIR --skip-deps
  - mkdir -p $OMNIBUS_PACKAGE_DIR_SUSE && cp $OMNIBUS_BASE_DIR/pkg/*.{rpm,metadata.json}
    $OMNIBUS_PACKAGE_DIR_SUSE
  stage: package_build
  tags:
  - runner:main
  - size:2xlarge
  variables:
    AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: /credentials
kitchen_centos_chef_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a6
  - .kitchen_test_chef_agent
kitchen_centos_chef_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a7
  - .kitchen_test_chef_agent
kitchen_centos_install_script_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a6
  - .kitchen_test_install_script_agent
kitchen_centos_install_script_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a7
  - .kitchen_test_install_script_agent
kitchen_centos_install_script_iot_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a7
  - .kitchen_test_install_script_iot_agent
kitchen_centos_step_by_step_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a6
  - .kitchen_test_step_by_step_agent
kitchen_centos_step_by_step_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a7
  - .kitchen_test_step_by_step_agent
kitchen_centos_upgrade5_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a6
  - .kitchen_test_upgrade5_agent
kitchen_centos_upgrade5_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a7
  - .kitchen_test_upgrade5_agent
kitchen_centos_upgrade6_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a6
  - .kitchen_test_upgrade6_agent
kitchen_centos_upgrade6_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a7
  - .kitchen_test_upgrade6_agent
kitchen_centos_upgrade7_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_centos_a7
  - .kitchen_test_upgrade7_agent
kitchen_debian_chef_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a6
  - .kitchen_test_chef_agent
kitchen_debian_chef_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a7
  - .kitchen_test_chef_agent
kitchen_debian_install_script_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a6
  - .kitchen_test_install_script_agent
kitchen_debian_install_script_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a7
  - .kitchen_test_install_script_agent
kitchen_debian_install_script_iot_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a7
  - .kitchen_test_install_script_iot_agent
kitchen_debian_step_by_step_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a6
  - .kitchen_test_step_by_step_agent
kitchen_debian_step_by_step_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a7
  - .kitchen_test_step_by_step_agent
kitchen_debian_upgrade5_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a6
  - .kitchen_test_upgrade5_agent
kitchen_debian_upgrade5_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a7
  - .kitchen_test_upgrade5_agent
kitchen_debian_upgrade6_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a6
  - .kitchen_test_upgrade6_agent
kitchen_debian_upgrade6_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a7
  - .kitchen_test_upgrade6_agent
kitchen_debian_upgrade7_agent_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_debian_a7
  - .kitchen_test_upgrade7_agent
kitchen_suse_chef_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a6
  - .kitchen_test_chef_agent
kitchen_suse_chef_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a7
  - .kitchen_test_chef_agent
kitchen_suse_install_script_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a6
  - .kitchen_test_install_script_agent
kitchen_suse_install_script_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a7
  - .kitchen_test_install_script_agent
kitchen_suse_install_script_iot_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a7
  - .kitchen_test_install_script_iot_agent
kitchen_suse_step_by_step_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a6
  - .kitchen_test_step_by_step_agent
kitchen_suse_step_by_step_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a7
  - .kitchen_test_step_by_step_agent
kitchen_suse_upgrade5_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a6
  - .kitchen_test_upgrade5_agent
kitchen_suse_upgrade5_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a7
  - .kitchen_test_upgrade5_agent
kitchen_suse_upgrade6_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a6
  - .kitchen_test_upgrade6_agent
kitchen_suse_upgrade6_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a7
  - .kitchen_test_upgrade6_agent
kitchen_suse_upgrade7_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_suse_a7
  - .kitchen_test_upgrade7_agent
kitchen_ubuntu_chef_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a6
  - .kitchen_test_chef_agent
kitchen_ubuntu_chef_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a7
  - .kitchen_test_chef_agent
kitchen_ubuntu_install_script_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a6
  - .kitchen_test_install_script_agent
kitchen_ubuntu_install_script_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a7
  - .kitchen_test_install_script_agent
kitchen_ubuntu_install_script_iot_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a7
  - .kitchen_test_install_script_iot_agent
kitchen_ubuntu_step_by_step_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a6
  - .kitchen_test_step_by_step_agent
kitchen_ubuntu_step_by_step_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a7
  - .kitchen_test_step_by_step_agent
kitchen_ubuntu_upgrade5_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a6
  - .kitchen_test_upgrade5_agent
kitchen_ubuntu_upgrade5_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a7
  - .kitchen_test_upgrade5_agent
kitchen_ubuntu_upgrade6_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a6
  - .kitchen_test_upgrade6_agent
kitchen_ubuntu_upgrade6_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a7
  - .kitchen_test_upgrade6_agent
kitchen_ubuntu_upgrade7_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_ubuntu_a7
  - .kitchen_test_upgrade7_agent
kitchen_windows_chef_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_windows_a6
  - .kitchen_test_chef_agent
kitchen_windows_chef_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_windows_a7
  - .kitchen_test_chef_agent
kitchen_windows_installer_agent-a6:
  allow_failure: true
  extends:
  - .kitchen_scenario_windows_a6
  - .kitchen_test_windows_installer_agent
  retry: 0
kitchen_windows_installer_agent-a7:
  allow_failure: true
  extends:
  - .kitchen_scenario_windows_a7
  - .kitchen_test_windows_installer_agent
  retry: 0
kitchen_windows_upgrade5_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_windows_a6
  - .kitchen_test_upgrade5_agent
kitchen_windows_upgrade5_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_windows_a7
  - .kitchen_test_upgrade5_agent
kitchen_windows_upgrade6_agent-a6:
  allow_failure: false
  extends:
  - .kitchen_scenario_windows_a6
  - .kitchen_test_upgrade6_agent
kitchen_windows_upgrade6_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_windows_a7
  - .kitchen_test_upgrade6_agent
kitchen_windows_upgrade7_agent-a7:
  allow_failure: false
  extends:
  - .kitchen_scenario_windows_a7
  - .kitchen_test_upgrade7_agent
notify-on-failure:
  dependencies: []
  extends: .slack-notifier.on-failure
  only:
  - master
  - triggers
  script: 'BUILD_URL="$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID"

    COMMIT_URL="$CI_PROJECT_URL/commit/$CI_COMMIT_SHA"


    COMMIT_AUTHOR=$(git show -s --format="%an" HEAD)


    MESSAGE_TEXT=":host-red: $CI_PROJECT_NAME: Pipeline <$BUILD_URL|$CI_PIPELINE_ID>
    for $CI_COMMIT_REF_NAME failed.

    $CI_COMMIT_TITLE (<$COMMIT_URL|$CI_COMMIT_SHORT_SHA>) by $COMMIT_AUTHOR"

    postmessage "#datadog-agent-pipelines" "$MESSAGE_TEXT"

    '
run_go_tidy_check:
  before_script:
  - cd $SRC_PATH
  - pip install --upgrade --ignore-installed pip setuptools
  - pip install -r requirements.txt
  - inv -e deps --no-dep-ensure --no-checks
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - fail_on_non_triggered_tag
  script:
  - go mod tidy
  - git diff-files --exit-code go.mod || (echo "go.mod is out of sync with project
    imports. Please run 'inv deps' and commit the changes on go.mod/go.sum." && false)
  stage: source_test
  tags:
  - runner:main
  - size:large
run_old_tests_windows-x64:
  extends: .run_old_tests_windows_base
  variables:
    ARCH: x64
    PYTHON_RUNTIMES: 3
run_old_tests_windows-x86:
  allow_failure: true
  except: *id006
  extends: .run_old_tests_windows_base
  variables:
    ARCH: x86
    PYTHON_RUNTIMES: 3
run_tests_deb-x64-py2:
  before_script: *id014
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  needs: *id015
  script:
  - inv -e test --race --profile --python-runtimes "$PYTHON_RUNTIMES" --cpus 4
  stage: source_test
  tags:
  - runner:main
  - size:2xlarge
  variables:
    CONDA_ENV: ddpy2
    PYTHON_RUNTIMES: '2'
run_tests_deb-x64-py3:
  before_script: *id014
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  needs: *id015
  script:
  - inv -e test --race --profile --python-runtimes "$PYTHON_RUNTIMES" --cpus 4
  stage: source_test
  tags:
  - runner:main
  - size:2xlarge
  variables:
    CONDA_ENV: ddpy3
    PYTHON_RUNTIMES: '3'
run_tests_rpm-x64-py2:
  before_script: *id014
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_x64:$DATADOG_AGENT_BUILDIMAGES
  needs: *id015
  script:
  - inv -e test --race --profile --python-runtimes "$PYTHON_RUNTIMES" --cpus 4 --build-exclude=systemd
  stage: source_test
  tags:
  - runner:main
  - size:2xlarge
  variables:
    CONDA_ENV: ddpy2
    PYTHON_RUNTIMES: '2'
run_tests_rpm-x64-py3:
  before_script: *id014
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_x64:$DATADOG_AGENT_BUILDIMAGES
  needs: *id015
  script:
  - inv -e test --race --profile --python-runtimes "$PYTHON_RUNTIMES" --cpus 4 --build-exclude=systemd
  stage: source_test
  tags:
  - runner:main
  - size:2xlarge
  variables:
    CONDA_ENV: ddpy3
    PYTHON_RUNTIMES: '3'
run_tests_windows-x64:
  extends: .run_tests_windows_base
  variables:
    ARCH: x64
    PYTHON_RUNTIMES: 3
run_tests_windows-x86:
  allow_failure: true
  except: *id006
  extends: .run_tests_windows_base
  variables:
    ARCH: x86
    PYTHON_RUNTIMES: 3
stages:
- fail_on_tag
- deps_build
- source_test
- binary_build
- package_build
- testkitchen_deploy
- testkitchen_testing
- testkitchen_cleanup
- image_build
- image_deploy
testkitchen_cleanup_azure-a6:
  allow_failure: true
  before_script: *id016
  dependencies: *id017
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/dd-agent-testing:$DATADOG_AGENT_BUILDERS
  only: *id002
  script: *id018
  stage: testkitchen_cleanup
  tags: *id019
  variables:
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a6
  when: always
testkitchen_cleanup_azure-a7:
  allow_failure: true
  before_script: *id016
  dependencies: *id017
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/dd-agent-testing:$DATADOG_AGENT_BUILDERS
  only: *id002
  script: *id018
  stage: testkitchen_cleanup
  tags: *id019
  variables:
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a7
  when: always
testkitchen_cleanup_s3-a6:
  allow_failure: true
  dependencies:
  - agent_deb-x64-a6
  except: *id004
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  only: *id002
  script: *id020
  stage: testkitchen_cleanup
  tags: *id021
  variables:
    AGENT_MAJOR_VERSION: 6
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a6
  when: always
testkitchen_cleanup_s3-a7:
  allow_failure: true
  dependencies:
  - agent_deb-x64-a7
  except: *id004
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  only: *id002
  script: *id020
  stage: testkitchen_cleanup
  tags: *id021
  variables:
    AGENT_MAJOR_VERSION: 7
    DD_PIPELINE_ID: $CI_PIPELINE_ID-a7
  when: always
variables:
  AGENT_BINARIES_DIR: bin/agent
  ANDROID_BUILDS_S3_BUCKET: $ANDROID_S3_BUCKET/builds
  ANDROID_S3_BUCKET: dd-agent-androidtesting
  BCC_VERSION: v0.12.0
  CLUSTER_AGENT_BINARIES_DIR: bin/datadog-cluster-agent
  CLUSTER_AGENT_CLOUDFOUNDRY_BINARIES_DIR: bin/datadog-cluster-agent-cloudfoundry
  DATADOG_AGENT_ARMBUILDIMAGES: v2424505-0439a40
  DATADOG_AGENT_BUILDERS: v2448672-5304c3c
  DATADOG_AGENT_BUILDIMAGES: v2424505-0439a40
  DATADOG_AGENT_SYSPROBE_BUILDIMAGES: v2424505-0439a40
  DATADOG_AGENT_WINBUILDERS: v2348149-ba6640d
  DATADOG_AGENT_WINBUILDIMAGES: v2468030-cbaf3fe
  DD_AGENT_TESTING_DIR: $CI_PROJECT_DIR/test/kitchen
  DD_REPO_BRANCH_NAME: $CI_COMMIT_REF_NAME
  DEB_RPM_BUCKET_BRANCH: nightly
  DEB_RPM_TESTING_BUCKET_BRANCH: testing
  DEB_S3_BUCKET: apt.datad0g.com
  DEB_TESTING_S3_BUCKET: apttesting.datad0g.com
  DOGSTATSD_BINARIES_DIR: bin/dogstatsd
  OMNIBUS_BASE_DIR: /.omnibus
  OMNIBUS_BASE_DIR_SUSE: /.omnibus/suse
  OMNIBUS_BASE_DIR_WIN: c:\omni-base\$CI_RUNNER_ID
  OMNIBUS_BASE_DIR_WIN_OMNIBUS: c:/omni-base/$CI_RUNNER_ID
  OMNIBUS_PACKAGE_DIR: $CI_PROJECT_DIR/.omnibus/pkg/
  OMNIBUS_PACKAGE_DIR_SUSE: $CI_PROJECT_DIR/.omnibus/suse/pkg
  PROCESS_S3_BUCKET: datad0g-process-agent
  RELEASE_VERSION_6: nightly
  RELEASE_VERSION_7: nightly-a7
  RPM_S3_BUCKET: yum.datad0g.com
  RPM_TESTING_S3_BUCKET: yumtesting.datad0g.com
  S3_ARTIFACTS_URI: s3://dd-ci-artefacts-build-stable/$CI_PROJECT_NAME/$CI_PIPELINE_ID
  S3_CP_CMD: aws s3 cp $S3_CP_OPTIONS
  S3_CP_OPTIONS: --only-show-errors --region us-east-1 --sse AES256
  S3_DSD6_URI: s3://dsd6-staging
  S3_OMNIBUS_CACHE_BUCKET: dd-ci-datadog-agent-omnibus-cache-build-stable
  SRC_PATH: /go/src/github.com/DataDog/datadog-agent
  STATIC_BINARIES_DIR: bin/static
  SYSTEM_PROBE_BINARIES_DIR: bin/system-probe
  SYSTEM_PROBE_GO_VERSION: 1.13.8
  USE_S3_CACHING: --omnibus-s3-cache
  WINDOWS_BUILDS_S3_BUCKET: $WIN_S3_BUCKET/builds
  WINDOWS_TESTING_S3_BUCKET_A6: pipelines/A6/$CI_PIPELINE_ID
  WINDOWS_TESTING_S3_BUCKET_A7: pipelines/A7/$CI_PIPELINE_ID
  WIN_S3_BUCKET: dd-agent-mstesting
windows_dsd_msi_x64-a7:
  before_script:
  - set RELEASE_VERSION $RELEASE_VERSION_7
  except: *id005
  extends: .windows_msi_base
  variables:
    AGENT_MAJOR_VERSION: '7'
    ARCH: x64
    OMNIBUS_TARGET: dogstatsd
    PYTHON_RUNTIMES: ''
windows_msi_x64-a6:
  before_script:
  - set RELEASE_VERSION $RELEASE_VERSION_6
  except: *id004
  extends: .windows_main_agent_base
  variables:
    AGENT_MAJOR_VERSION: 6
    ARCH: x64
    PYTHON_RUNTIMES: 2,3
windows_msi_x64-a7:
  before_script:
  - set RELEASE_VERSION $RELEASE_VERSION_7
  except: *id005
  extends: .windows_main_agent_base
  variables:
    AGENT_MAJOR_VERSION: 7
    ARCH: x64
    PYTHON_RUNTIMES: '3'
windows_msi_x86-a6:
  allow_failure: true
  before_script:
  - set RELEASE_VERSION $RELEASE_VERSION_6
  except: *id006
  extends: .windows_main_agent_base
  variables:
    AGENT_MAJOR_VERSION: 6
    ARCH: x86
    PYTHON_RUNTIMES: 2,3
windows_msi_x86-a7:
  allow_failure: true
  before_script:
  - set RELEASE_VERSION $RELEASE_VERSION_7
  except: *id006
  extends: .windows_main_agent_base
  variables:
    AGENT_MAJOR_VERSION: 7
    ARCH: x86
    PYTHON_RUNTIMES: '3'
windows_old_msi_x64-a6:
  before_script:
  - set RELEASE_VERSION $RELEASE_VERSION_6
  except: *id004
  extends: .windows_old_main_agent_base
  variables:
    AGENT_MAJOR_VERSION: 6
    ARCH: x64
    PYTHON_RUNTIMES: 2,3
windows_old_msi_x64-a7:
  before_script:
  - set RELEASE_VERSION $RELEASE_VERSION_7
  except: *id005
  extends: .windows_old_main_agent_base
  variables:
    AGENT_MAJOR_VERSION: 7
    ARCH: x64
    PYTHON_RUNTIMES: '3'
